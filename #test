var sheetName = 'ชีต1'
		var scriptProp = PropertiesService.getScriptProperties()

		function intialSetup () {
		  var activeSpreadsheet = SpreadsheetApp.getActiveSpreadsheet()
		  scriptProp.setProperty('key', activeSpreadsheet.getId())
		}

		function doPost (e) {
		  var lock = LockService.getScriptLock()
		  lock.tryLock(10000)

		  try {
			var doc = SpreadsheetApp.openById(scriptProp.getProperty('key'))
			var sheet = doc.getSheetByName(sheetName)

			var headers = sheet.getRange(1, 1, 1, sheet.getLastColumn()).getValues()[0]
			var nextRow = sheet.getLastRow() + 1

			var newRow = headers.map(function(header) {
			  return header === 'timestamp' ? new Date() : e.parameter[header]
			})
			sheet.getRange(nextRow, 1, 1, newRow.length).setValues([newRow])

			return ContentService
			  .createTextOutput(JSON.stringify({ 'result': 'success', 'row': nextRow }))
			  .setMimeType(ContentService.MimeType.JSON)
		  }

		  catch (e) {
			return ContentService
			  .createTextOutput(JSON.stringify({ 'result': 'error', 'error': e }))
			  .setMimeType(ContentService.MimeType.JSON)
		  }

		  finally {
			lock.releaseLock()
		  }
		}


		document.getElementById('borrowForm').addEventListener('submit', function(event) {
            event.preventDefault();

            // Get form values
            const borrowDate = document.getElementById('borrowDate').value;
            const studentId = document.getElementById('studentId').value;
            const studentName = document.getElementById('studentName').value;
            const equipment = document.getElementById('equipment').value;
            const errorMessageDiv = document.getElementById('error-message');

            fetch('https://script.google.com/macros/s/AKfycbzYqapz6WxNBXUrGfRrrInm9r-4ZegWy1gsE5XB58T4gu7306yKQi0m3CT_c5Ehgpw/exec', {
                method: 'POST',
                body: new URLSearchParams({ 
                    dateTime: borrowDate,
                    studentId: studentId,
                    studentName: studentName,
                    equipment: equipment 
                }),
                headers: { 'Content-Type': 'application/x-www-form-urlencoded' }
})
            .then(response => response.text())
            .then(data => {
                console.log(data); // For debugging purposes
                alert('คำขอยืมถูกส่งแล้ว');
                // Redirect to approval page after submission
                window.location.href = 'approval.html';
            })
            .catch(error => {
                console.error('Error:', error);
                alert('เกิดข้อผิดพลาดในการส่งคำขอ');
            });
        });



		/* เลือกsheet

		var scriptProp = PropertiesService.getScriptProperties();

function intialSetup() {
  var activeSpreadsheet = SpreadsheetApp.getActiveSpreadsheet();
  scriptProp.setProperty('key', activeSpreadsheet.getId());
}

function doPost(e) {
  var lock = LockService.getScriptLock();
  lock.tryLock(10000);

  try {
    var doc = SpreadsheetApp.openById(scriptProp.getProperty('key'));
    
    // เลือกชีตตามพารามิเตอร์ที่ส่งมา เช่น 'Sheet1' หรือ 'Sheet2'
    var sheetName = e.parameter.sheetName || 'Sheet2'; // ค่าเริ่มต้นเป็น 'Sheet1'
    var sheet = doc.getSheetByName(sheetName);

    if (!sheet) {
      return ContentService
        .createTextOutput(JSON.stringify({ 'result': 'error', 'error': 'Sheet not found' }))
        .setMimeType(ContentService.MimeType.JSON);
    }

    var headers = sheet.getRange(1, 1, 1, sheet.getLastColumn()).getValues()[0];
    var nextRow = sheet.getLastRow() + 1;

    var newRow = headers.map(function(header) {
      return e.parameter[header] || ''; // กำหนดให้ return ค่าว่างหากไม่มีพารามิเตอร์
    });

    sheet.getRange(nextRow, 1, 1, newRow.length).setValues([newRow]);

    return ContentService
      .createTextOutput(JSON.stringify({ 'result': 'success', 'row': nextRow }))
      .setMimeType(ContentService.MimeType.JSON);
  } catch (e) {
    return ContentService
      .createTextOutput(JSON.stringify({ 'result': 'error', 'error': e }))
      .setMimeType(ContentService.MimeType.JSON);
  } finally {
    lock.releaseLock();
  }
}
*/